{
  "EMAIL": "agregar_mail@gmail.com",
  "PASSWORD": "password",
  "API_KEY": "apikey_openai",
  "EMAIL_FILE_TYPE": ".msg",
  "MAX_EMAILS": "10",
  "EMAIL_INIT": "2",
  "MAX_NREQUEST_OPENAI": "5",
  "MINIMUM_KEY_COUNT": 5,
  "PATH_EMAILS_MSG": "C:/UOC/Master Data Science/TFM/2023/IMPLEMENTACION/Python/procesarFacturas/data/EMails/msg/Emails",
  "PATH_EMAILS_EML": "C:/UOC/Master Data Science/TFM/2023/IMPLEMENTACION/Python/procesarFacturas/data/EMails/eml",
  "PATH_TESSERACT": "C:\\Program Files\\Tesseract-OCR\\tesseract.exe",
  "PATH_EXPORT_XLS": "C:\\UOC\\Master Data Science\\TFM\\2023\\IMPLEMENTACION\\Python\\procesarFacturas\\data\\Results",
  "PROMPT": "You are an AI trained to extract and validate specific information from invoice-related texts in both English and Spanish. Please analyze the text below and provide the results in JSON format, along with a confidence score for each extracted piece of information. The information to extract includes: Total, Subtotal, Order Date, Numbering, Buyer, Seller, Purchase Date, Country, City, and Email. When extracting the information, ensure that the column labels remain consistent across all responses. For example, given the input text: 'Order No. 12345, Buyer: John Doe, Seller: Acme Inc., Total: $100', the expected output is: '{\"Order No\": \"12345\", \"Buyer\": \"John Doe\", \"Seller\": \"Acme Inc.\", \"Total\": \"$100\", \"Confidence\": 95}'. \\n\\nPlease provide the response as a single JSON object without any additional text.\\n\\nText:\\n",
  "PROMPT_DETAIL": "You are an AI trained to extract and validate specific information from multiple invoice line item details in texts, in both English and Spanish. Please analyze the text below and provide the results in JSON format, along with a confidence score for each extracted piece of information. The information to extract includes: Description, Brand, Quantity, Unit of Measure, Price, and Total Line. When extracting the information, ensure that the column labels remain consistent across all responses, and the JSON output is formatted correctly. For example, given the input text: 'Description: BS465N70 O-Ring, Brand: Brammer, Quantity: 90, Unit of Measure: each, Price: 4.67, Total Line: 420.30', the expected output is: '[{\"Description\": \"BS465N70 O-Ring\", \"Brand\": \"Brammer\", \"Quantity\": 90, \"Unit of Measure\": \"each\", \"Price\": \"4.67\", \"Total Line\": \"420.30\", \"Confidence\": 95}]'. Please provide the response as a single JSON object or array without any additional text.\\n\\nText:\\n",
  "PROMPT_ORDER": "You are an AI trained to extract and validate specific information from purchase order-related texts in both English and Spanish. Please analyze the text below and provide the results in JSON format, along with a confidence score for each extracted piece of information. The information to extract includes 'Order Number': value, 'Order Date': value, 'Buyer': value, 'Seller': value, 'Country': value, 'City': value. The 'Country' and 'City' values should correspond to the same geographical region within a country. Each field in the JSON response should be formatted as 'Field': value, even if the value is null. For example, given the input text: 'Order No. 12345, Buyer: John Doe, Seller: Acme Inc.', the expected output is: '{\"Order Number\": \"12345\", \"Buyer\": \"John Doe\", \"Seller\": \"Acme Inc.\", \"Confidence\": 95}'. Please provide the response as a single JSON object without any additional text.\\n\\nText:\\n",
  "PROMPT_DETAIL_ORDER": "You are an AI trained to extract and validate specific information from multiple purchase order line item details in texts, in both English and Spanish. Please analyze the text below and provide the results in JSON format, along with a confidence score for each extracted piece of information. The information to extract includes 'Description': value, 'Brand': value, 'Quantity': value, 'Unit of Measure': value, 'Unit Price': value. Each field in the JSON response should be formatted as 'Field': value, even if the value is null. For example, given the input text: 'Description: BS465N70 O-Ring, Brand: Brammer, Quantity: 90, Unit of Measure: each, Unit Price: 4.67', the expected output is: '[{\"Description\": \"BS465N70 O-Ring\", \"Brand\": \"Brammer\", \"Quantity\": 90, \"Unit of Measure\": \"each\", \"Unit Price\": \"4.67\", \"Confidence\": 95}]'. Please provide the response as a single JSON object or array without any additional text.\\n\\nText:\\n",
  "TYPE_CONTENT": "combined",
  "FILE_LOGS": "C:\\UOC\\Master Data Science\\TFM\\2023\\IMPLEMENTACION\\Python\\procesarFacturas\\data\\logs\\error_logs.txt"
}